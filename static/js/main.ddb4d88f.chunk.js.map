{"version":3,"sources":["Containers/ServingRatePlot.js","Containers/ServingHeatMap.js","Containers/SpeedViolation25.js","Containers/PassengerViolation4.js","Containers/PassengerOverall.js","Containers/Home.js","Containers/About.js","App.js","serviceWorker.js","index.js","Components/BarChartSpec.js","Components/LineChartSpec.js"],"names":["ServingRatePlot","props","handleHover","args","console","log","handleData","bar","line","title","setState","state","servedData1","servedData2","unservedData1","unservedData2","title1","title2","servedPlotData","unservedPlotData","servedLineData","unservedLineData","servingRate","map","row","push","Hour","servedRate","overAllServing","this","barData","table","lineData","className","onClick","Vega","spec","LineChartSpec","data","signalListeners","React","Component","ServingHeatMap","plot","frameborder","src","allowfullscreen","webkitallowfullscreen","mozallowfullscreen","oallowfullscreen","msallowfullscreen","SpeedViolation25","window","location","reload","style","width","PassengerViolation4","PassengerOverall","Home","Nav","Link","href","About","Navigation","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","Toggle","aria-controls","Collapse","id","App","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","exports","height","padding","name","signals","value","on","events","update","scales","type","domain","field","range","nice","axes","orient","scale","marks","tooltip","from","encode","enter","x","offset","band","y","y2","fill","hover","align","baseline","text","signal","fillOpacity","test"],"mappings":"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","file":"static/js/main.ddb4d88f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { spec } from '../Components/BarChartSpec';\r\nimport { LineChartSpec } from '../Components/LineChartSpec';\r\nimport { Vega } from 'react-vega';\r\nimport servingRate from '../data/vehicle_serving.json';\r\n\r\nclass ServingRatePlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            servedData1: '',\r\n            servedData2: '',\r\n            unservedData1: '',\r\n            unservedData2: '',\r\n            bar: '',\r\n            line: '',\r\n            title: '',\r\n            title1: \"Served Rate Per Hour\",\r\n            title2: \"Unserved Rate Per Hour\"\r\n        }\r\n    }\r\n\r\n    handleHover = (...args) => {\r\n        console.log(args);\r\n    }\r\n    componentWillMount() {\r\n        let servedPlotData = [];\r\n        let unservedPlotData = [];\r\n        let servedLineData = [];\r\n        let unservedLineData = [];\r\n\r\n        servingRate.map(row => {\r\n\r\n            servedLineData.push({ \"x\": row.Hour, \"y\": row.servedRate, \"c\": 1 });\r\n            servedLineData.push({ \"x\": row.Hour, \"y\": (100 - row.overAllServing), \"c\": 0 });\r\n            unservedLineData.push({ \"x\": row.Hour, \"y\": (100 - row.servedRate), \"c\": 1 });\r\n            unservedLineData.push({ \"x\": row.Hour, \"y\": row.overAllServing, \"c\": 0 });\r\n\r\n            servedPlotData.push({ 'Hour': row.Hour, 'servedRate': row.servedRate });\r\n            unservedPlotData.push({ 'Hour': row.Hour, 'servedRate': 100 - row.servedRate });\r\n            return true;\r\n        })\r\n\r\n        this.setState({\r\n            servedData1: servedPlotData,\r\n            servedData2: servedLineData,\r\n            unservedData1: unservedPlotData,\r\n            unservedData2: unservedLineData,\r\n            bar: servedPlotData,\r\n            line: servedLineData,\r\n            title: this.state.title1\r\n        })\r\n    }\r\n\r\n    handleData = (bar, line, title) => {\r\n        this.setState({ bar: bar, line: line, title: title });\r\n    }\r\n\r\n    render() {\r\n        var barData = {\r\n            table: this.state.bar\r\n        };\r\n\r\n\r\n        var lineData = {\r\n            table: this.state.line\r\n        }\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <div className=\"h4 mb-5\">Cab Service Hourly Rate Line Chart and Bar Plot</div>\r\n                <div>\r\n                    <button className=\"btn btn-success m-2\" onClick={() => this.handleData(this.state.servedData1, this.state.servedData2, this.state.title1)}>served Rate</button>\r\n                    <button className=\"btn btn-danger m-2\" onClick={() => this.handleData(this.state.unservedData1, this.state.unservedData2, this.state.title2)}>Unserved Rate</button>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"card col-sm-6\">\r\n                        <Vega className=\"card-body\" spec={LineChartSpec} data={lineData} signalListeners={this.signalListeners} />\r\n                        <div className=\"card-title font-weight-bold\">Line Chart for {this.state.title}</div>\r\n                    </div>\r\n                    <div className=\"card col-sm-6\">\r\n                        <Vega className=\"card-body\" spec={spec} data={barData} signalListeners={this.signalListeners} />\r\n                        <div className=\"card-title font-weight-bold\">Bar Plot for {this.state.title}</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ServingRatePlot;","import React from 'react';\r\nimport './ServingHeatMap.css';\r\n\r\nclass ServingHeatMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: 'stackedBar'\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <iframe\r\n                    className=\"iframe\"\r\n                    frameborder=\"0\"\r\n                    src=\"https://aham-carto.carto.com/builder/2f72564c-cfb1-42a6-861a-d63174d9b97f/embed\"\r\n                    allowfullscreen\r\n                    webkitallowfullscreen\r\n                    mozallowfullscreen\r\n                    oallowfullscreen\r\n                    msallowfullscreen\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ServingHeatMap;","import React from 'react';\r\n\r\nclass SpeedViolation25 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: 'stackedBar'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // drawPixi();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <iframe\r\n                    className=\"iframe\"\r\n                    frameborder=\"0\"\r\n                    src=\"https://ahamedbashir.github.io/cabSpeedViolation/\"\r\n                    allowfullscreen\r\n                    webkitallowfullscreen\r\n                    mozallowfullscreen\r\n                    oallowfullscreen\r\n                    msallowfullscreen\r\n                />\r\n                <button className=\"iframeTop btn btn-primary\" onClick={() => window.location.reload(false)}>Restart Simulation</button>\r\n                <div className=\"card visInfoBox bg-semi-transparent\" style={{ width: \"12rem\" }}>\r\n                    <div className=\"h4 text-info\">Speed Violation</div>\r\n                    <div className=\"text-left text-white bg-semi-transparent p-2 rounded\">\r\n                        This Map marks the vehicle as <span className=\"text-danger\">RED </span>\r\n                        When the speed of that car is over 25 Mile/Hour\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default SpeedViolation25;","import React from 'react';\r\n\r\nclass PassengerViolation4 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: 'stackedBar'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Container simulate Passenger Violation\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PassengerViolation4;","import React from 'react';\r\n\r\nclass PassengerOverall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: 'stackedBar'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <iframe\r\n                    className=\"iframe\"\r\n                    frameborder=\"0\"\r\n                    src=\"https://ahamedbashir.github.io/visualizationFinal/\"\r\n                    allowfullscreen\r\n                    webkitallowfullscreen\r\n                    mozallowfullscreen\r\n                    oallowfullscreen\r\n                    msallowfullscreen\r\n                />\r\n                <button className=\"iframeTop btn btn-primary\" onClick={() => window.location.reload(false)}>Restart Simulation</button>\r\n                <div className=\"card visInfoBox bg-semi-transparent\" style={{ width: \"12rem\" }}>\r\n                    <div className=\"h4 text-info\">Passenger Count</div>\r\n                    <div className=\"text-left text-white bg-semi-transparent p-2 rounded\">\r\n                        Color Hue/Saturation Represents Number of Passenger in a car at that time\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PassengerOverall;","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: 'stackedBar'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center mr-2 ml-2\">\r\n                <div className=\"display-4 m-5\">\r\n                    Welcome!\r\n                    <div className=\"h4 mt-1\">\r\n                        Here You Can See the Daily life of NYC Cab\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"card m-1\">\r\n                    <Nav.Link className=\"\" href=\"/vis/servingRate\">Service Rate</Nav.Link>\r\n                </div>\r\n                <div className=\"card m-1\">\r\n                    <Nav.Link className=\"\" href=\"/vis/servingHeatMap\">Service Request Temporal & Spatial</Nav.Link>\r\n                </div>\r\n                <div className=\"card m-1\">\r\n                    <Nav.Link className=\"\" href=\"/vis/speedViolation25\">Speed Violation</Nav.Link>\r\n                </div>\r\n                <div className=\"card m-1\">\r\n                    <Nav.Link className=\"\" href=\"/vis/passengerOverall\">Number of Passenger Over Time</Nav.Link>\r\n                </div>\r\n                <div className=\"mt-5 h5 card\">\r\n                    <a className=\"text-info\" href=\"/vis/info\"> To learn about the data and Processing steps, Click Here or go to info</a>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"\">\r\n                <div className=\"card-body m-5 text-success h2\">Most of the datasets are processed using Python</div>\r\n                <div className=\"card m-4 row container-fluid justify-content-center\" >\r\n                    <div className=\"card-body \">\r\n                        <div className=\"card-header bg-info h5\"> Task 1 & Task 2 Data Preparation</div>\r\n                    </div>\r\n\r\n                    <ol className=\"text-left\">\r\n                        <li>Timestamp Converted from unix time to normal date</li>\r\n                        <li>For task on service rate, dataset is grouped by Hour</li>\r\n                        <li>Based on the our, total matching service request count per hour is used to calculate the served and unserved rate. </li>\r\n                        <Nav.Link className=\"h5 text-right\" href=\"/vis/servingRate\">See Service Rate</Nav.Link>\r\n                    </ol>\r\n                    \r\n                    <ol className=\"text-left\">\r\n                        <li>For the spatial visualization: data is processed by combining the Manhattan geojson</li>\r\n                        <li>A Boolean column is added to the vehicle_request dataset based on the matched service\r\n                            <ul>\r\n                                <li>True for matched/served Request</li>\r\n                                <li>False for unmatched/unserved Request</li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li>For each service Request, the respective location is merged from the Manhattan.geojson</li>\r\n                        <li>To do that, manhattan.geojson is processed into a dictionary with stop id as the key</li>\r\n                        <li>After merging these two dataset, cartodb is used to visualize the time map </li>\r\n                        <li>Based on the value of boolean served, the stops are color:\r\n                            <ul>\r\n                                <li>Green for Served</li>\r\n                                <li>Purple for unserved</li>\r\n                            </ul>\r\n                        </li>\r\n                        <Nav.Link className=\"h5 text-right\" href=\"/vis/servingHeatMap\">See Service Map</Nav.Link>\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className=\"card row m-4 container-fluid justify-content-center\">\r\n                    <div className=\"card-body \">\r\n                        <div className=\"card-header bg-info h5\"> Task 3 & 4 & 5 Data Preparation</div>\r\n                    </div>\r\n\r\n                    <ol className=\"text-left\">\r\n                        <li>From the vehicle_path, events, a dictionary of vehicle id as key and path as value is created</li>\r\n                        <li>path is is a list/array with all the [Timestamp, Latitude, Longitude, passenger, speed]</li>\r\n                        <li>speed is calculated based on the diffence of Latitude, Longitude and time from the previous stop to next stop</li>\r\n                        <li>On the spatial and temporal map, two color is used\r\n                            <ul>\r\n                                <li>Red color is used only for speed over 25 <Nav.Link className=\"text-right h5\" href=\"/vis/speedViolation25\">See Speed Violations</Nav.Link></li>\r\n\r\n                            </ul>\r\n                            <ul>\r\n                                <li>Color scale is used to show number of passenger <Nav.Link className=\"text-right h5\" href=\"/vis/passengerOverall\">See Passenger Count</Nav.Link></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport './App.css';\r\n// import * as d3 from 'd3';\r\nimport ServingRatePlot from './Containers/ServingRatePlot';\r\nimport ServingHeatMap from './Containers/ServingHeatMap';\r\nimport SpeedViolation25 from './Containers/SpeedViolation25';\r\nimport PassengerViolation4 from './Containers/PassengerViolation4';\r\nimport PassengerOverall from './Containers/PassengerOverall';\r\nimport Home from './Containers/Home';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport About from './Containers/About';\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n\r\n    <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav nav-right\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/vis/servingRate\">Serving Rate</Nav.Link>\r\n          <Nav.Link href=\"/vis/servingHeatMap\">Serving Map</Nav.Link>\r\n          <Nav.Link href=\"/vis/speedViolation25\">Speed Violation</Nav.Link>\r\n          <Nav.Link href=\"/vis/passengerViolation4\">Passenger Violation</Nav.Link>\r\n          <Nav.Link href=\"/vis/passengerOverall\">All Passenger</Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link className=\"text-success \" href=\"/vis/info\">Info</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router >\r\n        <Navigation />\r\n        <div className=\"container-fluid text-center\">\r\n          <div className=\"row justify-content-center\" id=\"container\">\r\n            <Switch>\r\n              <Route path=\"/vis/servingRate\" component={ServingRatePlot} />\r\n              <Route path=\"/vis/servingHeatMap\" component={ServingHeatMap} />\r\n              <Route path=\"/vis/speedViolation25\" component={SpeedViolation25} />\r\n              <Route path=\"/vis/passengerViolation4\" component={PassengerViolation4} />\r\n              <Route path=\"/vis/passengerOverall\" component={PassengerOverall} />\r\n              <Route path=\"/vis/info\" component={About} />\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// import React from 'react';\r\n// import { Vega , VegaLite} from 'react-vega';\r\n// import servingRate from '../data/vehicle_serving.json';\r\n\r\nexports.spec = {\r\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\r\n  width: 300,\r\n  height: 200,\r\n  padding: 25,\r\n\r\n  data: [{ name: 'table' }],\r\n\r\n  signals: [\r\n    {\r\n      name: 'tooltip',\r\n      value: {},\r\n      on: [\r\n        { events: 'rect:mouseover', update: 'datum' },\r\n        { events: 'rect:mouseout', update: '{}' },\r\n      ],\r\n    },\r\n  ],\r\n\r\n  scales: [\r\n    {\r\n      name: 'xscale',\r\n      type: 'band',\r\n      domain: { data: 'table', field: 'Hour' },\r\n      range: 'width',\r\n    },\r\n    {\r\n      name: 'yscale',\r\n      domain: { data: 'table', field: 'servedRate' },\r\n      nice: true,\r\n      range: 'height',\r\n    },\r\n  ],\r\n\r\n  axes: [{ orient: 'bottom', scale: 'xscale', title: \"Hour\" },\r\n        { orient: 'left', scale: 'yscale', title: \"Service Rate (%)\" }],\r\n\r\n  marks: [\r\n    {\r\n      type: 'rect',\r\n      tooltip: true,\r\n      from: { data: 'table' },\r\n      encode: {\r\n        enter: {\r\n          x: { scale: 'xscale', field: 'Hour', offset: 1 },\r\n          width: { scale: 'xscale', band: 1, offset: -1 },\r\n          y: { scale: 'yscale', field: 'servedRate' },\r\n          y2: { scale: 'yscale', value: 0 },\r\n        },\r\n        update: {\r\n          fill: { value: 'steelblue' },\r\n        },\r\n        hover: {\r\n          fill: { value: 'red' },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      tooltip: true,\r\n      from: { data: 'table' },\r\n      encode: {\r\n        enter: {\r\n          x: { scale: 'xscale', field: 'Hour', offset: 1 },\r\n          width: { scale: 'xscale', band: 1, offset: -1 },\r\n          y: { scale: 'yscale', field: 'overAllServing' },\r\n          y2: { scale: 'yscale', value: 0 },\r\n        },\r\n        update: {\r\n          fill: { value: 'steelblue' },\r\n        },\r\n        hover: {\r\n          fill: { value: 'red' },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'text',\r\n      tooltip: true,\r\n      encode: {\r\n        enter: {\r\n          align: { value: 'center' },\r\n          baseline: { value: 'bottom' },\r\n          fill: { value: '#333' },\r\n        },\r\n        update: {\r\n          x: { scale: 'xscale', \"signal\": 'tooltip.Hour', band: 0.5 },\r\n          y: { scale: 'yscale', \"signal\": 'tooltip.servedRate', offset: -5 },\r\n          text: { signal: ('tooltip.Hour', 'tooltip.servedRate') },\r\n          fillOpacity: [{ test: 'datum === tooltip', value: 0 }, { value: 1 }],\r\n        },\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\n\r\n\r\n\r\n// function handleHover(...args) {\r\n//     console.log(args);\r\n// }\r\n\r\n// const signalListeners = { hover: handleHover };\r\n// class BarChart extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//     }\r\n//     render() {\r\n\r\n//         return <VegaLite spec={spec} data={this.props.barData} signalListeners={signalListeners} />\r\n//     }\r\n// }\r\n\r\n// export default BarChart;","exports.LineChartSpec = {\r\n    \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\r\n    \"width\": 300,\r\n    \"height\": 200,\r\n    \"padding\": 25,\r\n  \r\n    \"signals\": [\r\n      {\r\n        \"name\": \"interpolate\",\r\n        \"value\": \"basis\",\r\n        \"bind\": {\r\n          \"input\": \"select\",\r\n          \"options\": [\r\n            \"basis\",\r\n            \"cardinal\",\r\n            \"catmull-rom\",\r\n            \"linear\",\r\n            \"monotone\",\r\n            \"natural\",\r\n            \"step\",\r\n            \"step-after\",\r\n            \"step-before\"\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n  \r\n    \"data\": [\r\n      {\r\n        \"name\": \"table\",\r\n      }\r\n    ],\r\n  \r\n    \"scales\": [\r\n      {\r\n        \"name\": \"x\",\r\n        \"type\": \"point\",\r\n        \"range\": \"width\",\r\n        \"domain\": {\"data\": \"table\", \"field\": \"x\"}\r\n      },\r\n      {\r\n        \"name\": \"y\",\r\n        \"type\": \"linear\",\r\n        \"range\": \"height\",\r\n        \"nice\": true,\r\n        \"zero\": true,\r\n        \"domain\": {\"data\": \"table\", \"field\": \"y\"}\r\n      },\r\n      {\r\n        \"name\": \"color\",\r\n        \"type\": \"ordinal\",\r\n        \"range\": \"category\",\r\n        \"domain\": {\"data\": \"table\", \"field\": \"c\"}\r\n      }\r\n    ],\r\n  \r\n    \"axes\": [\r\n      {\"orient\": \"bottom\", \"scale\": \"x\", title: \"Hour\"},\r\n      {\"orient\": \"left\", \"scale\": \"y\", title: \"Service Rate (%)\"}\r\n    ],\r\n  \r\n    \"marks\": [\r\n      {\r\n        \"type\": \"group\",\r\n        \"from\": {\r\n          \"facet\": {\r\n            \"name\": \"series\",\r\n            \"data\": \"table\",\r\n            \"groupby\": \"c\"\r\n          }\r\n        },\r\n        \"marks\": [\r\n          {\r\n            \"type\": \"line\",\r\n            \"from\": {\"data\": \"series\"},\r\n            \"encode\": {\r\n              \"enter\": {\r\n                \"x\": {\"scale\": \"x\", \"field\": \"x\"},\r\n                \"y\": {\"scale\": \"y\", \"field\": \"y\"},\r\n                \"stroke\": {\"scale\": \"color\", \"field\": \"c\"},\r\n                \"strokeWidth\": {\"value\": 2}\r\n              },\r\n              \"update\": {\r\n                \"interpolate\": {\"signal\": \"interpolate\"},\r\n                \"fillOpacity\": {\"value\": 1}\r\n              },\r\n              \"hover\": {\r\n                \"fillOpacity\": { \"value\": 0.5 }\r\n              }\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  "],"sourceRoot":""}